---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka-cluster
spec:
  kafka:
    version: 3.4.0
    replicas: 3
    template:
      pod:
        tolerations:
          - key: "app.stateful/component"
            operator: "Equal"
            value: "kafka-broker"
            effect: NoSchedule
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: "app.stateful/component"
                      operator: In
                      values:
                        - "kafka-broker"
    resources:
      requests:
        memory: 2Gi
        cpu: "500m"
      limits:
        memory: 5Gi
        cpu: "500m"
    jvmOptions:
      -Xms: 2048m
      -Xmx: 2048m
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: tls
      - name: sha
        port: 9094
        type: internal
        tls: true
        authentication:
          type: scram-sha-512
      - name: exsha
        port: 9095
        type: ingress
        tls: true
        authentication:
          type: scram-sha-512
        configuration:
          class: internal # TODO : Is this ingress class name ?
          bootstrap:
            host: "boostrap-sha.monosense.io"
            annotations:
              external-dns.alpha.kubernetes.io/hostname: "bootstrap-sha.monosense.io"
              external-dns.alpha.kubernetes.io/ttl: "600"
              external-dns.alpha.kubernetes.io/target: "internal.monosense.io" # TODO : Review this
          brokers:
            - broker: 0
              host: "broker-sha-0.monosense.io"
              annotations:
                external-dns.alpha.kubernetes.io/hostname: "broker-sha-0.monosense.io"
                external-dns.alpha.kubernetes.io/ttl: "600"
                external-dns.alpha.kubernetes.io/target: "internal.monosense.io" # TODO : Review this
            - broker: 1
              host: "broker-sha-1.monosense.io"
              annotations:
                external-dns.alpha.kubernetes.io/hostname: "broker-sha-1.monosense.io"
                external-dns.alpha.kubernetes.io/ttl: "600"
                external-dns.alpha.kubernetes.io/target: "internal.monosense.io" # TODO : Review this
            - broker: 2
              host: "broker-sha-2.monosense.io"
              annotations:
                external-dns.alpha.kubernetes.io/hostname: "broker-sha-2.monosense.io"
                external-dns.alpha.kubernetes.io/ttl: "600"
                external-dns.alpha.kubernetes.io/target: "internal.monosense.io" # TODO : Review this
      - name: extls
        port: 9096
        type: ingress
        tls: true
        authentication:
          type: tls
        configuration:
          class: internal # TODO : Is this ingress class name ?
          bootstrap:
            host: "bootstrap-tls.monosense.io"
            annotations:
              external-dns.alpha.kubernetes.io/hostname: "bootstrap-tls.monosense.io"
              external-dns.alpha.kubernetes.io/ttl: "600"
              external-dns.alpha.kubernetes.io/target: "internal.monosense.io" # TODO : Review this
          brokers:
            - broker: 0
              host: "broker-tls-0.monosense.io"
              annotations:
                external-dns.alpha.kubernetes.io/hostname: "broker-tls-0.monosense.io"
                external-dns.alpha.kubernetes.io/ttl: "600"
                external-dns.alpha.kubernetes.io/target: "internal.monosense.io" # TODO : Review this
            - broker: 1
              host: "broker-tls-1.monosense.io"
              annotations:
                external-dns.alpha.kubernetes.io/hostname: "broker-tls-1.monosense.io"
                external-dns.alpha.kubernetes.io/ttl: "600"
                external-dns.alpha.kubernetes.io/target: "internal.monosense.io" # TODO : Review this
            - broker: 2
              host: "broker-tls-2.monosense.io"
              annotations:
                external-dns.alpha.kubernetes.io/hostname: "broker-tls-2.monosense.io"
                external-dns.alpha.kubernetes.io/ttl: "600"
                external-dns.alpha.kubernetes.io/target: "internal.monosense.io" # TODO : Review this
    authorization:
      type: simple
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.4"
    storage:
      type: jbod
      volumes:
        - id: 0
          type: persistent-claim
          size: 10Gi
          class: ceph-filesystem
          deleteClaim: false
  kafkaExporter:
    template:
      pod:
        metadata:
          annotations:
            prometheus.io/path: /metrics
            prometheus.io/port: "9404"
            prometheus.io/scrape: "true"
  zookeeper:
    template:
      pod:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: "app.stateful/component"
                      operator: In
                      values:
                        - "zookeeper"
        # topologySpreadConstraints:
        #   - maxSkew: 1
        #     topologyKey: "topology.kubernetes.io/zone"
        #     whenUnsatisfiable: DoNotSchedule
        #     labelSelector:
        #       matchLabels:
        #         app.kubernetes.io/name: zookeeper
        #         strimzi.io/cluster: datahub-cluster
        #         strimzi.io/component-type: zookeeper
    replicas: 3
    resources:
      requests:
        memory: 2560Mi
        cpu: 1000m
      limits:
        memory: 2560Mi
        cpu: 2000m
    jvmOptions:
      -Xms: 2048m
      -Xmx: 2048m
    storage:
      type: persistent-claim
      size: 10Gi
      class: ceph-filesystem
      deleteClaim: false
  entityOperator:
    tlsSidecar:
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 500m
          memory: 128Mi
    topicOperator:
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          cpu: 500m
          memory: 512Mi
    userOperator:
      resources:
        requests:
          cpu: 500m
          ephemeral-storage: 1Gi
          memory: 2Gi
        limits:
          cpu: 500m
          ephemeral-storage: 1Gi
          memory: 2Gi

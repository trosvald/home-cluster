---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-authentik-saml
  namespace: dev
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: gitlab-authentik-saml
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        provider: |
          name: saml
          args:
            assertion_consumer_service_url: 'https://gitlab.monosense.io/users/auth/saml/callback'
            idp_cert_fingerprint: '{{ .authentik_idp_cert_fingerprint }}'
            idp_sso_target_url: 'https://auth.monosense.io/application/saml/gitlab/sso/binding/redirect/'
            issuer: 'https://gitlab.monosense.io'
            name_identifier_format: 'urn:oasis:names:tc:SAML:2.0:nameid-format:persistent'
            attribute_statements:
              email: ['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress']
          label: 'Monosense SSO'
  dataFrom:
    - extract:
        key: Authentik
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-secrets
  namespace: dev
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: gitlab-secrets
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        GITLAB_ROOT_PASSWORD: "{{ .gitlab_root_password }}"
        GITLAB_SMTP_HOST: "{{ .zohomail_smtp_host }}"
        GITLAB_SMTP_PORT: "{{ .zohomail_smtp_port }}"
        GITLAB_SMTP_USER: "{{ .zohomail_email_address }}"
        GITLAB_SMTP_PASSWORD: "{{ .zohomail_smtp_password }}"
  dataFrom:
    - extract:
        key: gitlab
    - extract:
        key: zohomail
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-rails-s3-secrets
  namespace: dev
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: gitlab-rails-s3-secrets
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        config: |
          provider: AWS
          region: "{{ .minio_region }}"
          aws_access_key_id: "{{ .minio_user }}"
          aws_secret_access_key: "{{ .minio_password }}"
          aws_signature_version: 4
          host: "{{ .minio_host }}"
          endpoint: "{{ .minio_endpoint }}"
          path_style: true
  dataFrom:
    - extract:
        key: minio
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-registry-s3-secrets
  namespace: dev
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: gitlab-registry-s3-secrets
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        config: |
          s3:
            v4auth: true
            regionendpoint: "{{ .minio_endpoint }}"
            pathstyle: true
            region: "{{ .minio_region }}"
            bucket: gitlab-registry
            accesskey: "{{ .minio_user }}"
            secretkey: "{{ .minio_password }}"
  dataFrom:
    - extract:
        key: minio
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-backup-s3-secrets
  namespace: dev
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: gitlab-backup-s3-secrets
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        config: |
          [default]
          access_key = "{{ .minio_user }}"
          secret_key = "{{ .minio_password }}"
          bucket_location = gitlab-backup
          multipart_chunk_size_mb = 128
  dataFrom:
    - extract:
        key: minio
